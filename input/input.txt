paths:
{
	inputDir = "input";
	outputDir = "output06";
};

general:
{
	fixedBurnedVal = true;
	fixedLeftLocation = false;
	unburnedLeft = true;
	curvedFlame = false;
	twinFlame = false;
	centeredDifferences = true;
};

chemistry:
{
	mechanismFile = "gri30syngas.xml";
	phaseID = "syngas";
};

grid:
{
	adaptation:
	{
		// Medium accuracy: vtol = 0.1, dvtol = 0.25
		// Minimal accuracy: vtol = 0.2, dvtol = 0.4
		vtol = 0.2;
		dvtol = 0.4;
		rmTol = 0.7;
		dampConst = 3;
		gridMin = 4.0e-6;
		gridMax = 0.02;
		uniformityTol = 3;
		absvtol = 1e-8;
	};

	regridding:
	{
		boundaryTol = 5e-4;
		boundaryTolRm = 1e-4;
		addPointCount = 3;
	};
};

InitialCondition:
{
	// Read Initial profile from a file.
	//file = "restartD.mat";
	
	// These properties will override parameters read from the file
	Tu = 300;
	fuel = "CO:0.8, H2:0.2";
	oxidizer = "N2:3.76, O2:1.0";
	equivalenceRatio = 0.6;
	
	pressure = 101325;
	
	// Generate a grid without a restart file
	nPoints = 40;
	xLeft = -0.005;
	xRight = 0.005;
};

StrainParameters:
{
	initial = 100;
	final = 100;
	tStart = 0;
	dt = 0.020;
	list = [200, 175, 150, 125, 100];
};

/*
CurvatureParameters:
{
	rInitial = 0.025;
	rFinal = 0.030;
	tStart = .171;	
	dt = 0.004;
	integralGain = 100;
	derivativeGain = 0;
	proportionalGain = 0.1;
	updateTimeInterval = 1e-4;
	updateStepInterval = 55;
	//	rStag = 0;
};
*/

times:
{
	maxTimestep = 2e-4;
	
	// Intervals for regridding and grid adaptation
	regridTimeInterval = 3e-3;
	regridStepInterval = 60;
	
	// Output intervals for integral flame data
	outputStepInterval = 5;
	outputTimeInterval = 5e-5;
		
	// Output intervals for flame profiles
	profileStepInterval = 500;
	profileTimeInterval = 2e-3;
};

integrator:
{
	relativeTolerance = 1e-5;
	continuityAbsTol = 1e-10;
	momentumAbsTol = 1e-10;
	energyAbsTol = 1e-8;
	speciesAbsTol = 1e-13;
};

debug:
{
	adaptation: false;
	regridding: false;
	sundials: false;
	jacobian: false;
	calcIC: false;
};

outputFiles:
{
	heatReleaseRate: true;
	auxiliaryVariables: false;
	timeDerivatives: false;
	residualComponents: false;
	firstFileNumber = 0;
};

terminationCondition:
{
	// Integrate until a specific time:
	//tEnd = 0.2;
	
	// Integrate until <measurment> is steady to within <tolerance> for <time>
	measurement = "Q";
	tolerance = 0.001;
	time = 0.025;
};
